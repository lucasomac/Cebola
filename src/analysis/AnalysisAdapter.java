/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACebola(ACebola node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDeclVar(AVariavelDeclVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADconstanteDeclVar(ADconstanteDeclVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesVarld(ASimplesVarld node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorVarld(AVetorVarld node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereTipo(ACaractereTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroTipo(AInteiroTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipo(ARealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringValor(AStringValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroValor(ANumeroValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealValor(ARealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOperacaoExp(AOperacaoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOperacaologicaExp(AOperacaologicaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegativoExp(ANegativoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegadoExp(ANegadoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInternoExp(AInternoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroExp(ANumeroExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealExp(ARealExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExp(AVariavelExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdVar(AIdVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorVar(AVetorVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddOperacao(AAddOperacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubOperacao(ASubOperacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultOperacao(AMultOperacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivOperacao(ADivOperacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorigOperacaologica(AMenorigOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorigOperacaologica(AMaiorigOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorOperacaologica(AMenorOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorOperacaologica(AMaiorOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualOperacaologica(AIgualOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiffOperacaologica(ADiffOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorOperacaologica(AXorOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuOperacaologica(AOuOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEOperacaologica(AEOperacaologica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComandoSe(ASeComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeNaoComandoSe(ASeNaoComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoRepita(AComandoRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoEnquanto(AComandoEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasos(ACasos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalComandoAvalie(ANormalComandoAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoComandoAvalie(ASenaoComandoAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumTipospara(ANumTipospara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarTipospara(AVarTipospara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASempassoComandoPara(ASempassoComandoPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompassoComandoPara(ACompassoComandoPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalComandoEscrita(ANormalComandoEscrita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrComandoEscrita(AStrComandoEscrita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoLeia(AComandoLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoAtribuicao(AComandoAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeiaComando(ALeiaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaComando(ARepitaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvaliarComando(AAvaliarComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEscritaComando(AEscritaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComando(ASeComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComando(AAtribuicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComando(AParaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVezes(TVezes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivisao(TDivisao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPtvirg(TPtvirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoispt(TDoispt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirg(TVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTApar(TApar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFpar(TFpar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAcol(TAcol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFcol(TFcol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspa(TAspa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorq(TMaiorq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorq(TMenorq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorigual(TMaiorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorigual(TMenorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimse(TFimse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRepita(TRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimenquanto(TFimenquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDe(TDe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimpara(TFimpara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimavalie(TFimavalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroReal(TNumeroReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComenlinha(TComenlinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLf(TLf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaco(TEspaco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCr(TCr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentado(TComentado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentadofinal(TComentadofinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCorpo(TCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEstrela(TEstrela node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
