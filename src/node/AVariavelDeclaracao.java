/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class AVariavelDeclaracao extends PDeclaracao
{
    private PTipo _tipo_;
    private TDoispontos _doispontos_;
    private final LinkedList<PVarVir> _varVir_ = new LinkedList<PVarVir>();
    private PVar _var_;
    private TPontoevirg _pontoevirg_;

    public AVariavelDeclaracao()
    {
        // Constructor
    }

    public AVariavelDeclaracao(
        @SuppressWarnings("hiding") PTipo _tipo_,
        @SuppressWarnings("hiding") TDoispontos _doispontos_,
        @SuppressWarnings("hiding") List<?> _varVir_,
        @SuppressWarnings("hiding") PVar _var_,
        @SuppressWarnings("hiding") TPontoevirg _pontoevirg_)
    {
        // Constructor
        setTipo(_tipo_);

        setDoispontos(_doispontos_);

        setVarVir(_varVir_);

        setVar(_var_);

        setPontoevirg(_pontoevirg_);

    }

    @Override
    public Object clone()
    {
        return new AVariavelDeclaracao(
            cloneNode(this._tipo_),
            cloneNode(this._doispontos_),
            cloneList(this._varVir_),
            cloneNode(this._var_),
            cloneNode(this._pontoevirg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariavelDeclaracao(this);
    }

    public PTipo getTipo()
    {
        return this._tipo_;
    }

    public void setTipo(PTipo node)
    {
        if(this._tipo_ != null)
        {
            this._tipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipo_ = node;
    }

    public TDoispontos getDoispontos()
    {
        return this._doispontos_;
    }

    public void setDoispontos(TDoispontos node)
    {
        if(this._doispontos_ != null)
        {
            this._doispontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doispontos_ = node;
    }

    public LinkedList<PVarVir> getVarVir()
    {
        return this._varVir_;
    }

    public void setVarVir(List<?> list)
    {
        for(PVarVir e : this._varVir_)
        {
            e.parent(null);
        }
        this._varVir_.clear();

        for(Object obj_e : list)
        {
            PVarVir e = (PVarVir) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._varVir_.add(e);
        }
    }

    public PVar getVar()
    {
        return this._var_;
    }

    public void setVar(PVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TPontoevirg getPontoevirg()
    {
        return this._pontoevirg_;
    }

    public void setPontoevirg(TPontoevirg node)
    {
        if(this._pontoevirg_ != null)
        {
            this._pontoevirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoevirg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipo_)
            + toString(this._doispontos_)
            + toString(this._varVir_)
            + toString(this._var_)
            + toString(this._pontoevirg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipo_ == child)
        {
            this._tipo_ = null;
            return;
        }

        if(this._doispontos_ == child)
        {
            this._doispontos_ = null;
            return;
        }

        if(this._varVir_.remove(child))
        {
            return;
        }

        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._pontoevirg_ == child)
        {
            this._pontoevirg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipo_ == oldChild)
        {
            setTipo((PTipo) newChild);
            return;
        }

        if(this._doispontos_ == oldChild)
        {
            setDoispontos((TDoispontos) newChild);
            return;
        }

        for(ListIterator<PVarVir> i = this._varVir_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarVir) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._var_ == oldChild)
        {
            setVar((PVar) newChild);
            return;
        }

        if(this._pontoevirg_ == oldChild)
        {
            setPontoevirg((TPontoevirg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
