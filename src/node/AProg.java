/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class AProg extends PProg
{
    private TPrograma _programa_;
    private TId _id_;
    private TInicio _inicio_;
    private final LinkedList<PDeclaracao> _declaracao_ = new LinkedList<PDeclaracao>();
    private TFimprograma _fimprograma_;

    public AProg()
    {
        // Constructor
    }

    public AProg(
        @SuppressWarnings("hiding") TPrograma _programa_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TInicio _inicio_,
        @SuppressWarnings("hiding") List<?> _declaracao_,
        @SuppressWarnings("hiding") TFimprograma _fimprograma_)
    {
        // Constructor
        setPrograma(_programa_);

        setId(_id_);

        setInicio(_inicio_);

        setDeclaracao(_declaracao_);

        setFimprograma(_fimprograma_);

    }

    @Override
    public Object clone()
    {
        return new AProg(
            cloneNode(this._programa_),
            cloneNode(this._id_),
            cloneNode(this._inicio_),
            cloneList(this._declaracao_),
            cloneNode(this._fimprograma_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProg(this);
    }

    public TPrograma getPrograma()
    {
        return this._programa_;
    }

    public void setPrograma(TPrograma node)
    {
        if(this._programa_ != null)
        {
            this._programa_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programa_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TInicio getInicio()
    {
        return this._inicio_;
    }

    public void setInicio(TInicio node)
    {
        if(this._inicio_ != null)
        {
            this._inicio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicio_ = node;
    }

    public LinkedList<PDeclaracao> getDeclaracao()
    {
        return this._declaracao_;
    }

    public void setDeclaracao(List<?> list)
    {
        for(PDeclaracao e : this._declaracao_)
        {
            e.parent(null);
        }
        this._declaracao_.clear();

        for(Object obj_e : list)
        {
            PDeclaracao e = (PDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._declaracao_.add(e);
        }
    }

    public TFimprograma getFimprograma()
    {
        return this._fimprograma_;
    }

    public void setFimprograma(TFimprograma node)
    {
        if(this._fimprograma_ != null)
        {
            this._fimprograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimprograma_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programa_)
            + toString(this._id_)
            + toString(this._inicio_)
            + toString(this._declaracao_)
            + toString(this._fimprograma_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programa_ == child)
        {
            this._programa_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._inicio_ == child)
        {
            this._inicio_ = null;
            return;
        }

        if(this._declaracao_.remove(child))
        {
            return;
        }

        if(this._fimprograma_ == child)
        {
            this._fimprograma_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programa_ == oldChild)
        {
            setPrograma((TPrograma) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._inicio_ == oldChild)
        {
            setInicio((TInicio) newChild);
            return;
        }

        for(ListIterator<PDeclaracao> i = this._declaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimprograma_ == oldChild)
        {
            setFimprograma((TFimprograma) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
