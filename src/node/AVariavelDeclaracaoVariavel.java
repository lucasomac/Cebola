/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class AVariavelDeclaracaoVariavel extends PDeclaracaoVariavel
{
    private PTipo _tipo_;
    private final LinkedList<PVariaveld> _primeiro_ = new LinkedList<PVariaveld>();
    private PVariaveld _segundo_;

    public AVariavelDeclaracaoVariavel()
    {
        // Constructor
    }

    public AVariavelDeclaracaoVariavel(
        @SuppressWarnings("hiding") PTipo _tipo_,
        @SuppressWarnings("hiding") List<?> _primeiro_,
        @SuppressWarnings("hiding") PVariaveld _segundo_)
    {
        // Constructor
        setTipo(_tipo_);

        setPrimeiro(_primeiro_);

        setSegundo(_segundo_);

    }

    @Override
    public Object clone()
    {
        return new AVariavelDeclaracaoVariavel(
            cloneNode(this._tipo_),
            cloneList(this._primeiro_),
            cloneNode(this._segundo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariavelDeclaracaoVariavel(this);
    }

    public PTipo getTipo()
    {
        return this._tipo_;
    }

    public void setTipo(PTipo node)
    {
        if(this._tipo_ != null)
        {
            this._tipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipo_ = node;
    }

    public LinkedList<PVariaveld> getPrimeiro()
    {
        return this._primeiro_;
    }

    public void setPrimeiro(List<?> list)
    {
        for(PVariaveld e : this._primeiro_)
        {
            e.parent(null);
        }
        this._primeiro_.clear();

        for(Object obj_e : list)
        {
            PVariaveld e = (PVariaveld) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._primeiro_.add(e);
        }
    }

    public PVariaveld getSegundo()
    {
        return this._segundo_;
    }

    public void setSegundo(PVariaveld node)
    {
        if(this._segundo_ != null)
        {
            this._segundo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._segundo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipo_)
            + toString(this._primeiro_)
            + toString(this._segundo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipo_ == child)
        {
            this._tipo_ = null;
            return;
        }

        if(this._primeiro_.remove(child))
        {
            return;
        }

        if(this._segundo_ == child)
        {
            this._segundo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipo_ == oldChild)
        {
            setTipo((PTipo) newChild);
            return;
        }

        for(ListIterator<PVariaveld> i = this._primeiro_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVariaveld) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._segundo_ == oldChild)
        {
            setSegundo((PVariaveld) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
