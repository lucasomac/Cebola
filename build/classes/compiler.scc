Helpers

    tudo = [0 .. 0xffff];
    /* Letras e Digitos */
    digito = ['0'..'9'];
    letra = ['a'..'z'] | ['A' ..'Z'];   
    hexa = ['a'..'f'] | ['A' .. 'F'];
    sem_asterisco = [tudo - '*'];
    sem_asterisco_barra = [sem_asterisco - '/']; 
         
    /* Caracteres de espaco */
    tab = 9;
    carriage_return = 13;
    nova_linha = 10; //new Line
    //eol = nl | cr | cr nl;
    eol = carriage_return | nova_linha | carriage_return nova_linha;
    nao_linha_fim = [tudo -[nova_linha + carriage_return]];
    underscore = '_';

    branco = (' ' | tab | eol)+;
States
    normal, /* The first state is the initial state. */
    comentario;

Tokens

/* Palavras reservadas */
string = 'caractere';
inicio = 'inicio';
fimprograma= 'fim';
se = 'se';
senao = 'senao';
enquanto = 'enquanto';
para = 'para';
avalie = 'avalie';
caso = 'caso';
verdadeiro = 'verdadeiro';
falso = 'falso';
booleano = 'booleano';
programa = 'programa';
inteiro = 'inteiro';
real = 'real';
leia = 'leia';
escreva = 'escreva';
vetor = 'vetor';

/*Especificacao para producoes*/
token_specifier = 'T';
production_specifier = 'P';

/*Operadores aritimeticos*/
atrib = '<-';
soma = '+';
sub = '-';
mult = '*';
div = '/';
mod = '%';

/*Operadores logicos*/
maiorq = '>';
menorq = '<';
maiorigualq = '>=';
menorigualq = '<=';

/*Operadores Booleanos*/
nao = 'nao';
e = 'e';
ou = 'ou';
igual = '=';
diferente = '<>';

/*Delimitadores*/
aparentese = '(';
fparentese = ')';
l_bkt = '[';
r_bkt = ']';
virg = ',';
pontoevirg = ';';
ponto = '.';
doispontos = ':';

//espaco = ' ';
//tab = tab;
//novalinha = line_feed;

/*Comentarios*/
comentlinha = '//'(nao_linha_fim)* nova_linha;
//coment_bloco = '/*' sem_asterisco* '*'+ (sem_asterisco_barra sem_asterisco* '*'+)* '/';
abrebloco = '/*';
fechabloco = '*/' ;

/* Identificadores (letras, numeros) */
id = (underscore | letra)(letra | digito | underscore)*;
num = digito+;
blank = branco+;
Ignored Tokens

    blank,
    comentlinha;//,//fechabloco,abrebloco;
    //coment_bloco;

